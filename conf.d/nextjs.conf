upstream "server_domain_or_IP" {
    server "server_domain_or_IP":3000;
}

server {
    listen 80 http2;
    server_name "server_domain_or_IP";
    return 301 https://"server_domain_or_IP"$request_uri;

}

server {
    listen 443 ssl http2;
    server_name "server_domain_or_IP";

    if ($host = www."server_domain_or_IP") {
        return 301 https://"server_domain_or_IP"$request_uri;
    } 
    

	
    root /var/www/html/"project_name"/out;
    
        
      location  @nextjs {
        proxy_pass http://"server_domain_or_IP";
        proxy_set_header Host $http_host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;
    }

  
    location / {
            try_files $uri.html $uri/index.html
            @nextjs;
            add_header Cache-Control "public, max-age=3600";
        }

    location \.(js|css|png|jpg|jpeg|gif|ico|webp)$ {
        expires 30d;
        access_log off;
        add_header Cache-Control "public";
    }

    location \.(woff|woff2|eot|ttf|otf)$ {
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
    }

  location ~ /.well-known {
    allow all;
  }
    ssl_certificate /etc/letsencrypt/live/"server_domain_or_IP"/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/"server_domain_or_IP"/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
